name: CloudFormation Pipeline

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  changeset:
    runs-on: ubuntu-latest
    outputs:
      has-changes: ${{ steps.changeset.outputs.has-changes }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::398930073421:role/ChangesetRole
          aws-region: us-east-2
      
      - name: Create changeset
        id: changeset
        run: |
          changeset_name="changeset-$(date +%s)"
          
          # Check if stack exists
          if aws cloudformation describe-stacks --stack-name example >/dev/null 2>&1; then
            changeset_type="UPDATE"
          else
            changeset_type="CREATE"
          fi
          
          if aws cloudformation create-change-set \
            --stack-name example \
            --template-body file://example.yml \
            --change-set-name "$changeset_name" \
            --change-set-type "$changeset_type" \
            --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM; then
            
            aws cloudformation wait change-set-create-complete \
              --stack-name example \
              --change-set-name "$changeset_name"
            
            changes=$(aws cloudformation describe-change-set \
              --stack-name example \
              --change-set-name "$changeset_name" \
              --query 'length(Changes)')
            
            if [ "$changes" -gt 0 ]; then
              echo "has-changes=true" >> $GITHUB_OUTPUT
              echo "changeset-name=$changeset_name" >> $GITHUB_OUTPUT
            else
              echo "has-changes=false" >> $GITHUB_OUTPUT
              aws cloudformation delete-change-set \
                --stack-name example \
                --change-set-name "$changeset_name"
            fi
          else
            echo "has-changes=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Store changeset artifact
        if: steps.changeset.outputs.has-changes == 'true'
        run: |
          echo "${{ steps.changeset.outputs.changeset-name }}" > changeset-name.txt
      
      - name: Upload changeset artifact
        if: steps.changeset.outputs.has-changes == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: changeset
          path: changeset-name.txt

  deploy:
    needs: changeset
    if: needs.changeset.outputs.has-changes == 'true'
    runs-on: ubuntu-latest
    environment: cloudformationexampledev
    steps:
      - name: Download changeset artifact
        uses: actions/download-artifact@v4
        with:
          name: changeset
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::398930073421:role/DeploymentRole
          aws-region: us-east-2
      
      - name: Execute deployment
        run: |
          changeset_name=$(cat changeset-name.txt)
          aws cloudformation execute-change-set \
            --stack-name example \
            --change-set-name "$changeset_name"
          
          # Wait for appropriate completion based on changeset type
          if aws cloudformation describe-stacks --stack-name example --query 'Stacks[0].StackStatus' --output text | grep -q CREATE; then
            aws cloudformation wait stack-create-complete --stack-name example
          else
            aws cloudformation wait stack-update-complete --stack-name example
          fi